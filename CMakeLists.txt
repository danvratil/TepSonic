project(tepsonic)

cmake_minimum_required(VERSION 2.8.9)

set(TEPSONIC_VERSION_MAJOR 1)
set(TEPSONIC_VERSION_MINOR 60)
set(TEPSONIC_VERSION_PATCH 0)
set(TEPSONIC_VERSION ${TEPSONIC_VERSION_MAJOR}.${TEPSONIC_VERSION_MINOR}.${TEPSONIC_VERSION_PATCH})

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)
set(CMAKE_AUTOMOC ON)

find_package(PkgConfig REQUIRED)
find_package(X11 REQUIRED)
find_package(Qt5Core REQUIRED)
find_package(Qt5Concurrent REQUIRED)
find_package(Qt5Gui REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(Qt5Sql REQUIRED)
find_package(Taglib REQUIRED)
find_package(Phonon4Qt5 REQUIRED)

add_definitions(${QT_DEFINITIONS}
                ${TAGLIB_CFLAGS}
                -DQT_NO_CAST_FROM_ASCII
                -DQT_NO_CAST_TO_ASCII
                -DQT_NO_KEYWORDS)

include_directories(
        ${Qt5Core_INCLUDE_DIRS}
        ${Qt5Concurrent_INCLUDE_DIRS}
        ${Qt5Gui_INCLUDE_DIRS}
        ${Qt5Widgets_INCLUDE_DIRS}
        ${Qt5Sql_INCLUDE_DIRS}
        ${PHONON_INCLUDE_DIR}
        ${TAGLIB_INCLUDES}
        ${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/qxt
        ${CMAKE_CURRENT_SOURCE_DIR}/player
        ${CMAKE_CURRENT_BINARY_DIR}/player
)

if (UNIX)
    find_package(Qt5X11Extras REQUIRED)
    include_directories(${Qt5X11Extras_INCLUDE_DIRS})
endif ()

if (NOT DEFINED CMAKE_INSTALL_PREFIX)
   set(CMAKE_INSTALL_PREFIX /usr/local)
endif (NOT DEFINED CMAKE_INSTALL_PREFIX)

if (NOT DEFINED LIB_SUFFIX)
  # Detect 32 vs. 64 bit arch
  if(CMAKE_SIZEOF_VOID_P EQUAL 4)
    set(LIB_SUFFIX 64)
  else()
    set(LIB_SUFFIX "")
  endif()
else (NOT DEFINED LIB_SUFFIX)
   set(LIB_SUFFIX ${LIB_SUFFIX})
endif (NOT DEFINED LIB_SUFFIX)

if (NOT DEFINED CMAKE_INSTALL_BINARY_DIR)
   set(INSTALL_BINARY_DIR ${CMAKE_INSTALL_PREFIX}/bin)
else (NOT DEFINED CMAKE_INSTALL_BINARY_DIR)
   set(INSTALL_BINARY_DIR ${CMAKE_INSTALL_BINARY_DIR})
endif (NOT DEFINED CMAKE_INSTALL_BINARY_DIR)

if (NOT DEFINED CMAKE_INSTALL_LIBRARY_DIR)
   set(INSTALL_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX})
else (NOT DEFINED CMAKE_INSTALL_LIBRARY_DIR)
   set(INSTALL_LIBRARY_DIR ${CMAKE_INSTALL_LIBRARY_DIR})
endif (NOT DEFINED CMAKE_INSTALL_LIBRARY_DIR)

if (NOT DEFINED CMAKE_INSTALL_DATA_DIR)
   set(INSTALL_DATA_DIR ${CMAKE_INSTALL_PREFIX}/share)
else (NOT DEFINED CMAKE_INSTALL_DATA_DIR)
   set(INSTALL_DATA_DIR ${CMAKE_INSTALL_DATA_DIR})
endif (NOT DEFINED CMAKE_INSTALL_DATA_DIR)

add_definitions(-DPKGDATADIR="${INSTALL_DATA_DIR}"
                -DLIBDIR="${INSTALL_LIBRARY_DIR}"
                -Wall)

add_subdirectory(3rdparty)
add_subdirectory(player)
add_subdirectory(plugins)
