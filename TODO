 - looks like collections are broken now
    - CollectionsModel is not updated when CollectionBuilder finishes
    - essentially we ignore half of the artists and albums, because they are
      in VA.
        IDEA: When populating interprets, we now skip all interprets that have
        at least one album in VA. However we should only skip interprets that
        have all their albums in VA. If there interpret has at least one album
        that is not in VA, the interpret should not be ignored

 - store UI settings immediately after change, so that they are preserved when TS crashes
 - lambdas! - clean up the code where possible
 - get rid of TaskManager - implement "tasks" in respective models
 - revisit AbstractPlugin interface - simplify?
 - revisit design of Settings - can we provide a more generic yet equally safe framework
   for configuration, reusable by plugins?
 - move away from .ui?
 - proper config UI for some Phonon effects
 - make MetadataEditor available from CollectionsView, too
    - support batch-changes of certain meta data
 - find better way of sharing MetaData between CollectionsModel and Playlist
 - kill DatabaseManager (or make it internal) and make CollectionsModel
    the only way to access collections, including changing the metadata
 - make MetaData explicitly shared, so that changes are propagated everywhere,
    or maybe work with QSharedPointer instead of QSharedData (that would save
    some more memory)
